{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABET","LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","sortMethod","resultGoods","sort","a","b","localeCompare","length","sortBy","visibleGoods","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,WACXC,EAAS,SAmBFC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EArBO,SAACC,EAAOC,GACrB,IAAMC,EAAW,YAAOF,GAExB,OAAQC,GACN,KAAKV,EAGH,OAFAW,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAEpCH,EACT,KAAKV,EAGH,OAFAU,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAEjCL,EACT,QACE,OAAOA,GAQSM,CAAOlB,EAAiBK,GACtCc,EAAeZ,EAAaE,EAAYW,UAAYX,EAE1D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYlB,IAAcJ,IAC9BuB,QAAS,kBAAMlB,EAAaL,IAJ9B,iCASA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYlB,IAAcH,IAC9BsB,QAAS,kBAAMlB,EAAaJ,IAJ9B,4BASA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAahB,IACjBiB,QAAS,kBAAMhB,GAAeD,IAJhC,sBASEF,GAAaE,IAEb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAa,IACbE,GAAc,IALlB,sBAcJ,6BACGW,EAAaM,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC1FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d0a2428.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABET = 'alphabet';\nconst LENGTH = 'length';\n\nconst sortBy = (goods, sortMethod) => {\n  const resultGoods = [...goods];\n\n  switch (sortMethod) {\n    case ALPHABET:\n      resultGoods.sort((a, b) => a.localeCompare(b));\n\n      return resultGoods;\n    case LENGTH:\n      resultGoods.sort((a, b) => a.length - b.length);\n\n      return resultGoods;\n    default:\n      return resultGoods;\n  }\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortBy(goodsFromServer, sortField);\n  const visibleGoods = isReversed ? sortedGoods.reverse() : sortedGoods;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== ALPHABET })}\n          onClick={() => setSortField(ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== LENGTH })}\n          onClick={() => setSortField(LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}